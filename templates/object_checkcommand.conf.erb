/**
* WARNING: This CheckCommand definition is automatically generated by Puppet.
* ANY MANUAL CHANGES TO IT WILL GET OVERWRITTEN!
*/

/**
* A CheckCommand definition. You can create your own configuration files
* in the conf.d directory (e.g. one per commnand). By default all *.conf
* files in this directory are included.
*
*/

object CheckCommand "<%= @object_checkcommandname %>" {
  <%#- If any of the @ parameters are undefined, don't print anything for them: -%>

  <%- if @template_to_import -%>
  import "<%= @template_to_import -%>"

  <%- end -%>
  <%- if @command -%>
  command = [ <% if @cmd_path -%><%= @cmd_path -%> + <% end -%><% @command.each_with_index do |cmd, i| %><%= cmd -%><%= ', ' if i < (@command.size - 1) %><% end %> ]
  <%- end -%>
  <%#- Need to add support to argument value as hash (recursivity) -%>

  <%- if @arguments -%>
  arguments = {
  <%- @arguments.keys.sort.each_with_index do |key, i| -%>
    <%= key %> = <% if @arguments[key].class == String %><%= @arguments[key] %>
    <%- else -%>{
      <%- @arguments[key].keys.sort.each do |k| -%>
      <%= k %> = <%= @arguments[key][k] %>
      <%- end -%>
    }
    <%- end -%>
  <%- end -%>
  }
  <%- end -%>

  <%- if @vars -%>
  <%- @vars.keys.sort.each do |key| -%>
  <%= key %> = <% if @vars[key].class == String %><%= @vars[key] %>
  <%- else -%>{
    <%- @vars[key].keys.sort.each do |k| -%>
    <%= k %> = <%= @vars[key][k] %>
    <%- end -%>
  }
    <%- end -%>
  <%- end -%>
  <%- end -%>

  <%- if @timeout -%>
  timeout = <%= @timeout %>
  <%- end -%>

  <%- if @env -%>
  env = {
  <%- @vars.keys.sort.each do |key| -%>
    <%= key %> = <%= @keys[key] %>
  <%- end -%>
  }
  <%- end -%>
}
